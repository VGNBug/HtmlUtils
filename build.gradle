buildscript {
    ext {
        springBootVersion = '1.4.0.M1'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'com.vgen'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    commonsLoggingVersion = "1.1.1"
    jUnitVersion = "4.11"

    compile "commons-logging:commons-logging:1.1.1"
    testCompile "junit:junit:4.11"

}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

task stage {
    dependsOn build
}

task copyToLib(type: Copy) {
    into "$buildDir/lib"
    from(configurations.compile)
}

bootRepackage.enabled = false

stage.dependsOn(copyToLib)

configurations {
    testOutput
}

dependencies {
    testOutput sourceSets.test.output
}
